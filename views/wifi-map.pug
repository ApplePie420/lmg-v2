extends layout

block layout-content
    div.Header
        nav.navbar.navbar-light.bg-light
            a.navbar-brand(href="/user") Home                        
            form.form-inline(action="/logout", method="GET")
                .form-group.mx-sm-3.mb-3
                    h4.nav-item
                        a(href="/editUser") #{username}
                .form-group.mx-sm-3.mb-3
                        a(href="/changePFP")
                            img(src="/image/" + `${pfp}` style="border-radius: 50%" width="48" height="48")     
                .form-group.mx-sm-3.mb-3
                    button.btn.btn-danger(type="submit") Log Out
                    
    .Content
        #map(style="width: 100%; height: 700px;")
        script.
            var mymap = L.map('map').locate({setView: true, maxZoom: 14});
            L.tileLayer("https://api.mapbox.com/styles/v1/mapbox/outdoors-v10/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibjN0dHgiLCJhIjoiY2thdjV6ZHk0MDhtazMzcGNoYTl1cHUwYyJ9.zah7JmDF59WE2UQOcdq98w", {attribution: "Mapbox", id: 'mapbox/streets-v11', maxZoom: 18, minZoom: 2}).addTo(mymap);

            var dbJSON = !{JSON.stringify(dbData)};
            var counter = !{0};

            for(var i = 0; i < dbJSON.length; i++) {
                var iconColor = dbJSON[i].author == "N3ttX" ? new L.Icon({
                                        iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-yellow.png',
                                        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
                                        iconSize: [25, 41],
                                        iconAnchor: [12, 41],
                                        popupAnchor: [1, -34],
                                        shadowSize: [41, 41]
                                        }) : new L.Icon({
                                        iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-blue.png',
                                        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
                                        iconSize: [25, 41],
                                        iconAnchor: [12, 41],
                                        popupAnchor: [1, -34],
                                        shadowSize: [41, 41]
                                        });

                var marker = L.marker([dbJSON[i].position[0], dbJSON[i].position[1]], {icon: iconColor}).addTo(mymap);
                marker.bindPopup("<b>SSID: </b>" + dbJSON[i].SSID + "<br>" +
                                "<b>MAC: </b>" + dbJSON[i].MAC + "<br>" +
                                "<b>Pass: </b>" + dbJSON[i].password + "<br>" +
                                "<a href='https://wigle.net/search?netid=" + dbJSON[i].MAC + "' target='_blank' data-toggle='tooltip' data-placement='top' title='You have to be logged in WiGLE to use this function.'>More info...</a>");
            }

            function sortWifis() {
                var input, filter, data, list, li, i, txtValue;
                input = document.getElementById("searchInput");
                filter = input.value.toUpperCase();
                list = document.getElementById("wifiList");
                li = list.getElementsByTagName("li");

                for(i = 0; i < li.length; i++) {
                    data = li[i].getElementsByTagName("a")[0];
                    txtValue = data.textContent || data.innerText;
                    
                    if(txtValue.toUpperCase().indexOf(filter) > -1) {
                        data.parentElement.style.display = "";
                    } else {
                        data.parentElement.style.display = "none";
                    }
                }
            }

            //TODO: when clicked on a wifi in the list, the map will center at the point
            function centerMapOnWifi(ssid) {
                console.log(ssid);
            }
        
        .container
            .row(style="margin: 10px")
                .col-sm
                    ul.list-group(style="width:100%")
                        li.list-group-item.d-flex.justify-content-between.align-items-center
                            | Results total
                            span.badge.badge-light.badge-pill #{dbData.length}
                        li.list-group-item.d-flex.justify-content-between.align-items-center
                            | N3ttX found
                            span.badge.badge-warning.badge-pill #{stringify(nettFound)}
                        li.list-group-item.d-flex.justify-content-between.align-items-center
                            | Czechball found
                            span.badge.badge-primary.badge-pill #{stringify(dbData.length-nettFound)}
                        li.list-group-item.d-flex.justify-content-between.align-items-center
                            | UPC WiFis
                            span.badge.badge-light.badge-pill #{stringify(UPCcounter)}
                        li.list-group-item.d-flex.justify-content-between.align-items-center
                            | Last added on
                            span.badge.badge-light.badge-pill #{moment(lastDate).utcOffset(0).format("DD/MM/YYYY HH:mm")}
                .col-sm
                    input(type="text", class="form-control", id="searchInput", onkeyup="sortWifis()", placeholder="Filter SSIDs..." autocomplete="off", style="width: 100%")
                    ul.list-group(style="width:100%; height: 200px; overflow: auto", id="wifiList")
                        each wifi in dbData
                            li.list-group-item
                                a(onclick="centerMapOnWifi()") #{wifi.SSID}